# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu exec $HOME/.cargo/bin/yofi apps

# ╔══════════════════════╗
# ║ Output configuration ║
# ╚══════════════════════╝
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/dump/octo-rawr.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 pos 0 0 res 1920x1200
output DP-4 pos 1920 0 res 2560x1440

# ╔════════════════════╗
# ║ Idle configuration ║
# ╚════════════════════╝
#
# Example configuration:
#
exec swayidle -w \
         timeout 60 'swaylock --screenshots' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock --screenshots' \
         lock 'swaylock --screenshots --grace 0'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# ╔═════════════════════╗
# ║ Input configuration ║
# ╚═════════════════════╝
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# or input <identifier>
input type:keyboard {
    xkb_layout us(dvorak),us
    xkb_options grp:alt_shift_toggle
}

input type:touchpad {
    dwt enabled
    tap enabled
    middle_emulation enabled
    natural_scroll enabled
}

input type:pointer {
    dwt enabled
    tap enabled
    middle_emulation enabled
    natural_scroll disabled
}

# ╔══════════════╗
# ║ Key bindings ║
# ╚══════════════╝
#
# ╔══════════════╗
# ║    Basics    ║
# ╚══════════════╝
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# ╔══════════════╗
# ║ File Browser ║
# ╚══════════════╝
#
    bindsym $mod+Ctrl+f exec mc
#
# ╔══════════════════╗
# ║Brightness Control║
# ╚══════════════════╝
#
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set +5%
#
# ╔═══════════════╗
# ║ Audio Control ║
# ╚═══════════════╝
#
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
#
# ╔═══════════════╗
# ║ Media Control ║
# ╚═══════════════╝
#
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
#
# ╔══════════════╗
# ║   Grimshot   ║
# ╚══════════════╝
#
    set $grimshot /usr/bin/grimshot
    bindsym Print exec $grimshot --notify save screen
    bindsym Ctrl+Print exec $grimshot --notify copy screen
    bindsym Shift+Print exec $grimshot --notify save area
    bindsym Ctrl+Shift+Print exec $grimshot --notify copy area
#
# ╔═══════════════╗
# ║ Mako Notifier ║
# ╚═══════════════╝
#
    bindsym $mod+n exec makoctl dismiss
    bindsym $mod+Shift+n exec makoctl dismiss -a
    exec mako
#
# ╔═══════════════╗
# ║ Moving around ║
# ╚═══════════════╝
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# ╔══════════════╗
# ║  Workspaces  ║
# ╚══════════════╝
#
    set $ws1 1:  
    set $ws2 2:  
    set $ws3 3:  
    set $ws4 4:  
    set $ws5 5:  
    set $ws6 6: β 
    set $ws7 7: α 
    set $ws8 8: ⟁ 
    set $ws9 9:  
    set $ws10 10: 🜎

    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    assign [app_id="firefox"] workspace $ws1
    assign [class="discord"] workspace $ws2
    assign [class="steam"] workspace $ws5
    assign [class="Brave-browser"] workspace $ws7
    assign [class="Godot"] workspace $ws8
    assign [app_id="Alacritty"] workspace $ws9
    assign [class="Aseprite"] workspace $ws10
    assign [app_id="org.mapeditor.tiled"] workspace $ws10

    workspace $ws10 output DP-4
    workspace $ws9 output DP-4
    workspace $ws8 output DP-4

    for_window [app_id="pavucontrol"] floating enable, sticky enable, resize set width 550px height 500px, move position cursor, move down 120
    for_window [class="Godot"] floating enable

#
# ╔══════════════╗
# ║ Layout stuff ║
# ╚══════════════╝
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# ╔══════════════╗
# ║  Scratchpad  ║
# ╚══════════════╝
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# 
# ╔═════════════════════╗
# ║     System Power    ║
# ╚═════════════════════╝
#
    mode "system" {
    # power
    bindsym p exec swaymsg "mode 'default', exec 'systemctl poweroff'"
    bindsym r exec swaymsg "mode 'default', exec 'systemctl reboot'"
    bindsym s exec swaymsg "mode 'default', exec 'systemctl suspend'"

    # session lock / logout
    bindsym l exec swaymsg "mode 'default', exec 'loginctl lock-session'"

    # Reload the configuration file
    bindsym c exec swaymsg "mode 'default', reload"

    # Exit sway (logs you out of your Wayland session)
    bindsym e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # return to normal mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+s mode "system"

# 
# ╔═════════════════════╗
# ║ Resizing containers ║
# ╚═════════════════════╝
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# ╔══════════════════════╗
# ║ Window Configuration ║
# ╚══════════════════════╝
#
default_border none
gaps inner 10

#
# ╔══════════════╗
# ║  Status Bar  ║
# ╚══════════════╝
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
bar {
  strip_workspace_name no
  swaybar_command waybar
}

include /etc/sway/config.d/*
exec gammastep
